name: Docker Build DeployTest

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/administration
  POSTGRES_IMAGE: postgres:15-alpine
  DB_NAME: kubsu
  DB_USER: kubsu
  DB_PASSWORD: kubsu
  APP_PORT: 60080 #rv

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./admin/resultTZ
          file: ./admin/resultTZ/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: kubsu
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull image
        run: docker pull ${{ env.DOCKER_IMAGE }}:latest

      - name: Run tests
        run: |
          docker run --rm \
            --network host \
            -e DATABASE_URL=postgresql+asyncpg://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@localhost:5432/${{ env.DB_NAME }} \
            ${{ env.DOCKER_IMAGE }}:latest \
            sh -c "pip install pytest && make test"

  deploy:
    runs-on: self-hosted
    needs: [ test ]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy
        run: |
          podman pull ${{ env.DOCKER_IMAGE }}:latest
          podman stop app || true
          podman rm -f app || true
          podman run -d \
            --replace \
            --name app \
            -p 60080:8000 \
            -e DATABASE_URL=postgresql+asyncpg://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@db-host:5432/${{ env.DB_NAME }} \
            ${{ env.DOCKER_IMAGE }}:latest
